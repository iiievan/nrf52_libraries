###############################################################################
#
# IAR ANSI C/C++ Compiler V8.40.1.212/W32 for ARM         05/Feb/2021  13:10:42
# Copyright 1999-2019 IAR Systems AB.
#
#    Cpu mode     =  
#    Endian       =  little
#    Source file  =  E:\cpp\nrf52_libraries\main\main.cpp
#    Command line =
#        -f C:\Users\IF385~1.SHO\AppData\Local\Temp\EWEF4E.tmp
#        (E:\cpp\nrf52_libraries\main\main.cpp -D NRF52840_XXAA -D
#        CONFIG_NFCT_PINS_AS_GPIOS -D _AUDIOGUDE_V2_BOARD -D DEBUG -lCN
#        E:\cpp\nrf52_libraries\main\List -lA E:\cpp\nrf52_libraries\main\List
#        -o E:\cpp\nrf52_libraries\main\Obj --no_cse --no_unroll --no_inline
#        --no_code_motion --no_tbaa --no_clustering --no_scheduling --debug
#        --endian=little --cpu=Cortex-M4 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        8.3\arm\inc\c\DLib_Config_Full.h" -I E:\cpp\nrf52_libraries\fsm\ -I
#        E:\cpp\nrf52_libraries\pwm\ -I E:\cpp\nrf52_libraries\spi\ -I
#        E:\cpp\nrf52_libraries\usb\ -I E:\cpp\nrf52_libraries\main\ -I
#        E:\cpp\nrf52_libraries\cmsis\ -I E:\cpp\nrf52_libraries\cmsis\device\
#        -I E:\cpp\nrf52_libraries\cmsis\include\ -I
#        E:\cpp\nrf52_libraries\board\ -I E:\cpp\nrf52_libraries\utils\ -I
#        E:\cpp\nrf52_libraries\timer\ -I E:\cpp\nrf52_libraries\adc\ -On --c++
#        --no_exceptions --no_rtti)
#    Locale       =  C
#    List file    =  E:\cpp\nrf52_libraries\main\List\main.lst
#    Object file  =  E:\cpp\nrf52_libraries\main\Obj\main.o
#
###############################################################################

E:\cpp\nrf52_libraries\main\main.cpp
      1          #include <string.h>
      2          #include <ctype.h>
      3          #include <intrinsics.h>
      4          #include "nrf.h"
      5          #include "nrf_gpio.h"
      6          
      7          #include "led_driver.h"

   \                                 In section .text, align 2
   \   __interwork __softfp void Timer::setCallback(void (*)(uint32_t))
   \                     _ZN5Timer11setCallbackEPFvjE: (+1)
   \        0x0   0x6081             STR      R1,[R0, #+8]
   \        0x2   0x4770             BX       LR               ;; return
      8          #include "nrf_hw_pwm.h"
      9          #include "ADC.h"

   \                                 In section .text, align 2
   \   __code __interwork __softfp ADCChannel_t::ADCChannel_t(EADCChannels, float, float, float)
   \                     _ZN12ADCChannel_tC1E12EADCChannelsfff: (+1)
   \        0x0   0xB430             PUSH     {R4,R5}
   \        0x2   0x9C02             LDR      R4,[SP, #+8]
   \        0x4   0x7001             STRB     R1,[R0, #+0]
   \        0x6   0x6042             STR      R2,[R0, #+4]
   \        0x8   0x6083             STR      R3,[R0, #+8]
   \        0xA   0x60C4             STR      R4,[R0, #+12]
   \        0xC   0x2500             MOVS     R5,#+0
   \        0xE   0x6105             STR      R5,[R0, #+16]
   \       0x10   0x2500             MOVS     R5,#+0
   \       0x12   0x6145             STR      R5,[R0, #+20]
   \       0x14   0xBC30             POP      {R4,R5}
   \       0x16   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __interwork __softfp ADCChannel_t &ADCChannel_t::scaleRaw(int16_t)
   \                     _ZN12ADCChannel_t8scaleRawEs: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \        0xA   0x....'....        BL       __aeabi_i2f
   \        0xE   0x6861             LDR      R1,[R4, #+4]
   \       0x10   0x....'....        BL       __aeabi_fmul
   \       0x14   0x6120             STR      R0,[R4, #+16]
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0xBD32             POP      {R1,R4,R5,PC}    ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp ADCConfig_t::ADCConfig_t(EADCGain, EADCPull, EADCAcquisitionTime, EADCReferenceVoltage)
   \                     _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x9C01             LDR      R4,[SP, #+4]
   \        0x4   0x7001             STRB     R1,[R0, #+0]
   \        0x6   0x7042             STRB     R2,[R0, #+1]
   \        0x8   0x7083             STRB     R3,[R0, #+2]
   \        0xA   0x70C4             STRB     R4,[R0, #+3]
   \        0xC   0xBC10             POP      {R4}
   \        0xE   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp ADC<6>::subobject ADC(EADCResolution)
   \                     _ZN3ADCILi6EEC2E14EADCResolution: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x....'....        BL       _ZN3ADCILi6EEC1E14EADCResolution
   \        0xC   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 4
   \   __interwork __softfp void ADC<6>::disable()
   \                     _ZN3ADCILi6EE7disableEv: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
   \        0x2   0x4A01             LDR.N    R2,??disable_0   ;; 0x40007500
   \        0x4   0x6011             STR      R1,[R2, #+0]
   \        0x6   0x4770             BX       LR               ;; return
   \                     ??disable_0:
   \        0x8   0x4000'7500        DC32     0x40007500

   \                                 In section .text, align 4
   \   __code __interwork __softfp ADC<6>::ADC(EADCResolution)
   \                     _ZN3ADCILi6EEC1E14EADCResolution: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x4E40             LDR.N    R6,??ADC_0       ;; 0x43960000
   \        0xA   0xF05F 0x507C      MOVS     R0,#+1056964608
   \        0xE   0x9000             STR      R0,[SP, #+0]
   \       0x10   0x0033             MOVS     R3,R6
   \       0x12   0x4A3F             LDR.N    R2,??ADC_0+0x4   ;; 0x4028c000
   \       0x14   0x2105             MOVS     R1,#+5
   \       0x16   0x0020             MOVS     R0,R4
   \       0x18   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x1C   0x483D             LDR.N    R0,??ADC_0+0x8   ;; 0x3dcccccd
   \       0x1E   0x9000             STR      R0,[SP, #+0]
   \       0x20   0x0033             MOVS     R3,R6
   \       0x22   0x4A3D             LDR.N    R2,??ADC_0+0xC   ;; 0x3fe10000
   \       0x24   0x2106             MOVS     R1,#+6
   \       0x26   0xF114 0x0018      ADDS     R0,R4,#+24
   \       0x2A   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x2E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \       0x32   0x9000             STR      R0,[SP, #+0]
   \       0x34   0x2300             MOVS     R3,#+0
   \       0x36   0x4A39             LDR.N    R2,??ADC_0+0x10  ;; 0x3f160000
   \       0x38   0x2101             MOVS     R1,#+1
   \       0x3A   0xF114 0x0030      ADDS     R0,R4,#+48
   \       0x3E   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x42   0x4E37             LDR.N    R6,??ADC_0+0x14  ;; 0x3f610000
   \       0x44   0x4F37             LDR.N    R7,??ADC_0+0x18  ;; 0x43fa0000
   \       0x46   0xF8DF 0x80E0      LDR.W    R8,??ADC_0+0x1C  ;; 0x3e99999a
   \       0x4A   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x4E   0x003B             MOVS     R3,R7
   \       0x50   0x0032             MOVS     R2,R6
   \       0x52   0x2107             MOVS     R1,#+7
   \       0x54   0xF114 0x0048      ADDS     R0,R4,#+72
   \       0x58   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x5C   0xF8CD 0x8000      STR      R8,[SP, #+0]
   \       0x60   0x003B             MOVS     R3,R7
   \       0x62   0x0032             MOVS     R2,R6
   \       0x64   0x2108             MOVS     R1,#+8
   \       0x66   0xF114 0x0060      ADDS     R0,R4,#+96
   \       0x6A   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x6E   0x482F             LDR.N    R0,??ADC_0+0x20  ;; 0x3f666666
   \       0x70   0x9000             STR      R0,[SP, #+0]
   \       0x72   0x4B2F             LDR.N    R3,??ADC_0+0x24  ;; 0x42c80000
   \       0x74   0x0032             MOVS     R2,R6
   \       0x76   0x2109             MOVS     R1,#+9
   \       0x78   0xF114 0x0078      ADDS     R0,R4,#+120
   \       0x7C   0x....'....        BL       _ZN12ADCChannel_tC1E12EADCChannelsfff
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x9000             STR      R0,[SP, #+0]
   \       0x84   0x2304             MOVS     R3,#+4
   \       0x86   0x2200             MOVS     R2,#+0
   \       0x88   0x2100             MOVS     R1,#+0
   \       0x8A   0xF114 0x0090      ADDS     R0,R4,#+144
   \       0x8E   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0x92   0x2000             MOVS     R0,#+0
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0x2304             MOVS     R3,#+4
   \       0x98   0x2200             MOVS     R2,#+0
   \       0x9A   0x2102             MOVS     R1,#+2
   \       0x9C   0xF114 0x0094      ADDS     R0,R4,#+148
   \       0xA0   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0xA4   0x2000             MOVS     R0,#+0
   \       0xA6   0x9000             STR      R0,[SP, #+0]
   \       0xA8   0x2304             MOVS     R3,#+4
   \       0xAA   0x2201             MOVS     R2,#+1
   \       0xAC   0x2102             MOVS     R1,#+2
   \       0xAE   0xF114 0x0098      ADDS     R0,R4,#+152
   \       0xB2   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0xB6   0x2000             MOVS     R0,#+0
   \       0xB8   0x9000             STR      R0,[SP, #+0]
   \       0xBA   0x2304             MOVS     R3,#+4
   \       0xBC   0x2202             MOVS     R2,#+2
   \       0xBE   0x2100             MOVS     R1,#+0
   \       0xC0   0xF114 0x009C      ADDS     R0,R4,#+156
   \       0xC4   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0xC8   0x2000             MOVS     R0,#+0
   \       0xCA   0x9000             STR      R0,[SP, #+0]
   \       0xCC   0x2304             MOVS     R3,#+4
   \       0xCE   0x2202             MOVS     R2,#+2
   \       0xD0   0x2100             MOVS     R1,#+0
   \       0xD2   0xF114 0x00A0      ADDS     R0,R4,#+160
   \       0xD6   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0xDA   0x2000             MOVS     R0,#+0
   \       0xDC   0x9000             STR      R0,[SP, #+0]
   \       0xDE   0x2304             MOVS     R3,#+4
   \       0xE0   0x2200             MOVS     R2,#+0
   \       0xE2   0x2100             MOVS     R1,#+0
   \       0xE4   0xF114 0x00A4      ADDS     R0,R4,#+164
   \       0xE8   0x....'....        BL       _ZN11ADCConfig_tC1E8EADCGain8EADCPull19EADCAcquisitionTime20EADCReferenceVoltage
   \       0xEC   0xF884 0x50B4      STRB     R5,[R4, #+180]
   \       0xF0   0x2000             MOVS     R0,#+0
   \       0xF2   0xF8C4 0x00B8      STR      R0,[R4, #+184]
   \       0xF6   0x2000             MOVS     R0,#+0
   \       0xF8   0x2100             MOVS     R1,#+0
   \       0xFA   0xE9C4 0x0130      STRD     R0,R1,[R4, #+192]
   \       0xFE   0x2001             MOVS     R0,#+1
   \      0x100   0xF884 0x00C8      STRB     R0,[R4, #+200]
   \      0x104   0x0020             MOVS     R0,R4
   \      0x106   0xE8BD 0x81F6      POP      {R1,R2,R4-R8,PC}  ;; return
   \      0x10A   0xBF00             Nop      
   \                     ??ADC_0:
   \      0x10C   0x4396'0000        DC32     0x43960000
   \      0x110   0x4028'C000        DC32     0x4028c000
   \      0x114   0x3DCC'CCCD        DC32     0x3dcccccd
   \      0x118   0x3FE1'0000        DC32     0x3fe10000
   \      0x11C   0x3F16'0000        DC32     0x3f160000
   \      0x120   0x3F61'0000        DC32     0x3f610000
   \      0x124   0x43FA'0000        DC32     0x43fa0000
   \      0x128   0x3E99'999A        DC32     0x3e99999a
   \      0x12C   0x3F66'6666        DC32     0x3f666666
   \      0x130   0x42C8'0000        DC32     0x42c80000

   \                                 In section .text, align 4
   \   __interwork __softfp void ADC<6>::deinit()
   \                     _ZN3ADCILi6EE6deinitEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x2000             MOVS     R0,#+0
   \                     ??deinit_1: (+1)
   \        0x6   0x0001             MOVS     R1,R0
   \        0x8   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \        0xA   0x2906             CMP      R1,#+6
   \        0xC   0xDA0D             BGE.N    ??deinit_2
   \        0xE   0x490D             LDR.N    R1,??deinit_0    ;; 0x40007510
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0x0003             MOVS     R3,R0
   \       0x14   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x16   0x011B             LSLS     R3,R3,#+4
   \       0x18   0x50CA             STR      R2,[R1, R3]
   \       0x1A   0x2200             MOVS     R2,#+0
   \       0x1C   0x0003             MOVS     R3,R0
   \       0x1E   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x20   0x011B             LSLS     R3,R3,#+4
   \       0x22   0x4419             ADD      R1,R1,R3
   \       0x24   0x608A             STR      R2,[R1, #+8]
   \       0x26   0x1C40             ADDS     R0,R0,#+1
   \       0x28   0xE7ED             B.N      ??deinit_1
   \                     ??deinit_2: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x4906             LDR.N    R1,??deinit_0+0x4  ;; 0x40007008
   \       0x2E   0x6008             STR      R0,[R1, #+0]
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0x4906             LDR.N    R1,??deinit_0+0x8  ;; 0x40007300
   \       0x34   0x6008             STR      R0,[R1, #+0]
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0x4905             LDR.N    R1,??deinit_0+0xC  ;; 0x40007308
   \       0x3A   0x6008             STR      R0,[R1, #+0]
   \       0x3C   0x0020             MOVS     R0,R4
   \       0x3E   0x....'....        BL       _ZN3ADCILi6EE7disableEv
   \       0x42   0xBD10             POP      {R4,PC}          ;; return
   \                     ??deinit_0:
   \       0x44   0x4000'7510        DC32     0x40007510
   \       0x48   0x4000'7008        DC32     0x40007008
   \       0x4C   0x4000'7300        DC32     0x40007300
   \       0x50   0x4000'7308        DC32     0x40007308

   \                                 In section .text, align 4
   \   __interwork __softfp void ADC<6>::onIRQ()
   \                     _ZN3ADCILi6EE5onIRQEv: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x4914             LDR.N    R1,??onIRQ_0     ;; 0x40007104
   \        0x6   0x6808             LDR      R0,[R1, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD023             BEQ.N    ??onIRQ_1
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x6008             STR      R0,[R1, #+0]
   \       0x10   0x2000             MOVS     R0,#+0
   \       0x12   0x4912             LDR.N    R1,??onIRQ_0+0x4  ;; 0x40007100
   \       0x14   0x6008             STR      R0,[R1, #+0]
   \       0x16   0x2500             MOVS     R5,#+0
   \                     ??onIRQ_2: (+1)
   \       0x18   0x0028             MOVS     R0,R5
   \       0x1A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1C   0x2806             CMP      R0,#+6
   \       0x1E   0xDA0F             BGE.N    ??onIRQ_3
   \       0x20   0x0028             MOVS     R0,R5
   \       0x22   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x24   0xEB04 0x0040      ADD      R0,R4,R0, LSL #+1
   \       0x28   0xF9B0 0x10A8      LDRSH    R1,[R0, #+168]
   \       0x2C   0x002A             MOVS     R2,R5
   \       0x2E   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x30   0x2018             MOVS     R0,#+24
   \       0x32   0x4342             MULS     R2,R0,R2
   \       0x34   0xEB04 0x0002      ADD      R0,R4,R2
   \       0x38   0x....'....        BL       _ZN12ADCChannel_t8scaleRawEs
   \       0x3C   0x1C6D             ADDS     R5,R5,#+1
   \       0x3E   0xE7EB             B.N      ??onIRQ_2
   \                     ??onIRQ_3: (+1)
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0x....'....        BL       _ZN3ADCILi6EE6deinitEv
   \       0x46   0xF8D4 0x00B8      LDR      R0,[R4, #+184]
   \       0x4A   0x2800             CMP      R0,#+0
   \       0x4C   0xD002             BEQ.N    ??onIRQ_1
   \       0x4E   0xF8D4 0x00B8      LDR      R0,[R4, #+184]
   \       0x52   0x4780             BLX      R0
   \                     ??onIRQ_1: (+1)
   \       0x54   0xBD31             POP      {R0,R4,R5,PC}    ;; return
   \       0x56   0xBF00             Nop      
   \                     ??onIRQ_0:
   \       0x58   0x4000'7104        DC32     0x40007104
   \       0x5C   0x4000'7100        DC32     0x40007100
     10          #include "timer.h"
     11          #include "PowerControl.h"

   \                                 In section .text, align 2
   \   __code __interwork __softfp PowerControl::PowerControl(uint32_t, ADC<6> &, Timer &, led_driver **, uint32_t, uint32_t, uint32_t, uint32_t)
   \                     _ZN12PowerControlC1EjR3ADCILi6EER5TimerPP10led_driverjjjj: (+1)
   \        0x0   0xB5F0             PUSH     {R4-R7,LR}
   \        0x2   0x9C05             LDR      R4,[SP, #+20]
   \        0x4   0x9D06             LDR      R5,[SP, #+24]
   \        0x6   0x9E07             LDR      R6,[SP, #+28]
   \        0x8   0x9F08             LDR      R7,[SP, #+32]
   \        0xA   0xF8DD 0xC024      LDR      R12,[SP, #+36]
   \        0xE   0xF05F 0x0E00      MOVS     LR,#+0
   \       0x12   0xF880 0xE000      STRB     LR,[R0, #+0]
   \       0x16   0xF05F 0x0E00      MOVS     LR,#+0
   \       0x1A   0xF880 0xE001      STRB     LR,[R0, #+1]
   \       0x1E   0x6042             STR      R2,[R0, #+4]
   \       0x20   0x6083             STR      R3,[R0, #+8]
   \       0x22   0x60C4             STR      R4,[R0, #+12]
   \       0x24   0x6101             STR      R1,[R0, #+16]
   \       0x26   0x6147             STR      R7,[R0, #+20]
   \       0x28   0xF8C0 0xC018      STR      R12,[R0, #+24]
   \       0x2C   0x61C5             STR      R5,[R0, #+28]
   \       0x2E   0x6206             STR      R6,[R0, #+32]
   \       0x30   0xF05F 0x0E00      MOVS     LR,#+0
   \       0x34   0xF8C0 0xE024      STR      LR,[R0, #+36]
   \       0x38   0xF05F 0x0E00      MOVS     LR,#+0
   \       0x3C   0xF880 0xE028      STRB     LR,[R0, #+40]
   \       0x40   0xF05F 0x0E00      MOVS     LR,#+0
   \       0x44   0xF8C0 0xE02C      STR      LR,[R0, #+44]
   \       0x48   0xBDF0             POP      {R4-R7,PC}       ;; return
     12          

   \                                 In section .text, align 2, keep-with-next
   \   static __intrinsic __interwork __softfp void __sti__routine()
   \                     __sti__routine: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0xB085             SUB      SP,SP,#+20
     13          ADC<ADC_CHANNELS_NUM> adc_unite(RES_12B);
   \        0x4   0x2102             MOVS     R1,#+2
   \        0x6   0x....             LDR.N    R0,??DataTable2
   \        0x8   0x....'....        BL       _ZN3ADCILi6EEC1E14EADCResolution
     14          PowerControl power_manager(CHRG_EN_PIN, adc_unite, sys_timer, led_list, VBAT_MEAS_PIN, MAIN_MEAS_PIN, SYS_3V0_PIN, MODULE_PWR);
   \        0xC   0x2128             MOVS     R1,#+40
   \        0xE   0x9104             STR      R1,[SP, #+16]
   \       0x10   0x2127             MOVS     R1,#+39
   \       0x12   0x9103             STR      R1,[SP, #+12]
   \       0x14   0x211C             MOVS     R1,#+28
   \       0x16   0x9102             STR      R1,[SP, #+8]
   \       0x18   0x211D             MOVS     R1,#+29
   \       0x1A   0x9101             STR      R1,[SP, #+4]
   \       0x1C   0x....             LDR.N    R1,??DataTable2_1
   \       0x1E   0x9100             STR      R1,[SP, #+0]
   \       0x20   0x....             LDR.N    R3,??DataTable2_2
   \       0x22   0x0002             MOVS     R2,R0
   \       0x24   0x2103             MOVS     R1,#+3
   \       0x26   0x....             LDR.N    R0,??DataTable2_3
   \       0x28   0x....'....        BL       _ZN12PowerControlC1EjR3ADCILi6EER5TimerPP10led_driverjjjj
   \       0x2C   0xB005             ADD      SP,SP,#+20
   \       0x2E   0xBD00             POP      {PC}             ;; return

   \                                 In section .bss, align 8
   \                     adc_unite:
   \        0x0                      DS8 208

   \                                 In section .bss, align 4
   \                     power_manager:
   \        0x0                      DS8 48
     15          

   \                                 In section .text, align 2, keep-with-next
     16          int main()
     17          {
   \                     main: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
     18              sys_timer.setIRQ(0, TIMER_1MS_INT_PRIORITY);
   \        0x2   0x....             LDR.N    R4,??DataTable2_2
   \        0x4   0x2205             MOVS     R2,#+5
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0x....'....        BL       _ZN5Timer6setIRQEhh
     19              sys_timer.setCallback(sys_timer_callback);
   \        0xE   0x....             LDR.N    R1,??DataTable2_4
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0x....'....        BL       _ZN5Timer11setCallbackEPFvjE
     20              sys_timer.init(7, 125, true);
   \       0x16   0x2301             MOVS     R3,#+1
   \       0x18   0x227D             MOVS     R2,#+125
   \       0x1A   0x2107             MOVS     R1,#+7
   \       0x1C   0x0020             MOVS     R0,R4
   \       0x1E   0x....'....        BL       _ZN5Timer4initEjjb
     21              
     22              power_manager.config(CHRG_MAX_CURRENT);
   \       0x22   0x....             LDR.N    R4,??DataTable2_3
   \       0x24   0x2100             MOVS     R1,#+0
   \       0x26   0x0020             MOVS     R0,R4
   \       0x28   0x....'....        BL       _ZN12PowerControl6configE15EChargeCurrents
     23              
     24              bl_btn_led.run(1);
   \       0x2C   0x2101             MOVS     R1,#+1
   \       0x2E   0x....             LDR.N    R0,??DataTable2_5
   \       0x30   0x....'....        BL       _ZN10led_driver3runEi
     25              kb_led.run(3);
   \       0x34   0x2103             MOVS     R1,#+3
   \       0x36   0x....             LDR.N    R0,??DataTable2_6
   \       0x38   0x....'....        BL       _ZN10led_driver3runEi
     26              btn_pr_led.run(7);
   \       0x3C   0x2107             MOVS     R1,#+7
   \       0x3E   0x....             LDR.N    R0,??DataTable2_7
   \       0x40   0x....'....        BL       _ZN10led_driver3runEi
     27              
     28            	while(1)
     29            	{        
     30                  red_led.run(1);
   \                     ??main_0: (+1)
   \       0x44   0x2101             MOVS     R1,#+1
   \       0x46   0x....             LDR.N    R0,??DataTable2_8
   \       0x48   0x....'....        BL       _ZN10led_driver3runEi
     31                  power_manager.handle();
   \       0x4C   0x0020             MOVS     R0,R4
   \       0x4E   0x....'....        BL       _ZN12PowerControl6handleEv
   \       0x52   0xE7F7             B.N      ??main_0
     32            	}
     33          }
     34          
     35          // because this is template of class, definition of irqhandler done in file where implementation of template is.

   \                                 In section .text, align 2, keep-with-next
     36          void adc_callback(uint32_t value) { return; }
   \                     _Z12adc_callbackj: (+1)
   \        0x0   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     37          extern "C" void SAADC_IRQHandler() { adc_unite.onIRQ(); }   
   \                     SAADC_IRQHandler: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0x....             LDR.N    R0,??DataTable2
   \        0x4   0x....'....        BL       _ZN3ADCILi6EE5onIRQEv
   \        0x8   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x....'....        DC32     adc_unite

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x....'....        DC32     led_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x....'....        DC32     sys_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x....'....        DC32     power_manager

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \        0x0   0x....'....        DC32     _Z18sys_timer_callbackj

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \        0x0   0x....'....        DC32     bl_btn_led

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \        0x0   0x....'....        DC32     kb_led

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \        0x0   0x....'....        DC32     btn_pr_led

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \        0x0   0x....'....        DC32     red_led
     38          
     39          
     40          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   ADC<6>::ADC(EADCResolution)
        32   -> ADCChannel_t::ADCChannel_t(EADCChannels, float, float, float)
        32   -> ADCConfig_t::ADCConfig_t(EADCGain, EADCPull, EADCAcquisitionTime, EADCReferenceVoltage)
       8   ADC<6>::deinit()
         8   -> ADC<6>::disable()
       0   ADC<6>::disable()
      16   ADC<6>::onIRQ()
        16   -- Indirect call
        16   -> ADC<6>::deinit()
        16   -> ADCChannel_t::scaleRaw(int16_t)
       8   ADC<6>::subobject ADC(EADCResolution)
         8   -> ADC<6>::ADC(EADCResolution)
       8   ADCChannel_t::ADCChannel_t(EADCChannels, float, float, float)
      16   ADCChannel_t::scaleRaw(int16_t)
        16   -> __aeabi_fmul
        16   -> __aeabi_i2f
       4   ADCConfig_t::ADCConfig_t(EADCGain, EADCPull, EADCAcquisitionTime, EADCReferenceVoltage)
      20   PowerControl::PowerControl(uint32_t, ADC<6> &, Timer &, led_driver **, uint32_t, uint32_t, uint32_t, uint32_t)
       8   SAADC_IRQHandler
         8   -> ADC<6>::onIRQ()
       0   Timer::setCallback(void (*)(uint32_t))
      24   __sti__routine()
        24   -> ADC<6>::ADC(EADCResolution)
        24   -> PowerControl::PowerControl(uint32_t, ADC<6> &, Timer &, led_driver **, uint32_t, uint32_t, uint32_t, uint32_t)
       0   adc_callback(uint32_t)
       8   main
         8   -> PowerControl::config(EChargeCurrents)
         8   -> PowerControl::handle()
         8   -> Timer::init(uint32_t, uint32_t, bool)
         8   -> Timer::setCallback(void (*)(uint32_t))
         8   -> Timer::setIRQ(uint8_t, uint8_t)
         8   -> led_driver::run(int)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
     308  ADC<6>::ADC(EADCResolution)
      84  ADC<6>::deinit()
      12  ADC<6>::disable()
      96  ADC<6>::onIRQ()
      14  ADC<6>::subobject ADC(EADCResolution)
      24  ADCChannel_t::ADCChannel_t(EADCChannels, float, float, float)
      26  ADCChannel_t::scaleRaw(int16_t)
      16  ADCConfig_t::ADCConfig_t(EADCGain, EADCPull, EADCAcquisitionTime, EADCReferenceVoltage)
      74  PowerControl::PowerControl(uint32_t, ADC<6> &, Timer &, led_driver **, uint32_t, uint32_t, uint32_t, uint32_t)
      10  SAADC_IRQHandler
       4  Timer::setCallback(void (*)(uint32_t))
      48  __sti__routine()
       2  adc_callback(uint32_t)
     208  adc_unite
      84  main
      48  power_manager
       4  -- Other

 
 256 bytes in section .bss
   4 bytes in section .init_array
 838 bytes in section .text
 
 184 bytes of CODE memory (+ 658 bytes shared)
 256 bytes of DATA memory

Errors: none
Warnings: none
